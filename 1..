#define  _CRT_SECURE_NO_WARNINGS
#include <math.h>
#include <stdlib.h>
#include <stdio.h>
#include "SCORE.h"
void readData(SS stu[], int N)
{

	printf("è?????ä????è?????ä??????,??,????,????\n");

	for (int i = 0; i < N; i++)
	{
		printf("?%dä????:", i + 1);
		scanf("%s %s %f %f", &stu[i].number, &stu[i].name, &stu[i].dailyScore, &stu[i].finalScore);
		printf("\n");
	}

	printf("------??????!--------\n");

}

//1.2ä???ä??é??è?????????
SS* readDataFromFile(int *N)
{

	printf("\n\n------?ä???: ä???ä??è????????ä???--------\n\n");

	SS *stu;// ?è????é??,???ä??ä????ä????ä???

	FILE *fp = NULL;
	int count = 0;
	int index = 0;

	fp = fopen("data.txt", "r");

	//1.è???????
	if (fp != NULL)
	{
		fscanf(fp, "%d", &count);
		*N = count;
	}
	else
	{
		printf("failed to open the info file\n");
		getchar();
	}

	printf("????ä??:%d\n", count);


	//2.??????é?????é??
	stu = (SS*)malloc(count * sizeof(SS));


	//3.è????????ä???
	while ((!feof(fp)))
	{

		//è????ä???????	
		fscanf(fp, "%s%s%f%f\n", (stu[index].number), (stu[index].name), &stu[index].dailyScore, &stu[index].finalScore);

		//è?????????ä???
		printf("* ???%s	??:%s		?????%4.2f?		????:%4.2f?\n", (stu[index].number), (stu[index].name), stu[index].dailyScore, stu[index].finalScore);

		index++;
	}

	getchar();

	fclose(fp);

	return stu;
}

//2.è???Nä?????è????è????
void calcuScore(SS stu[], int N)
{


	printf("\n\n------?ä???: è????ä??????è????--------\n\n");

	for (int i = 0; i < N; i++)
	{

		stu[i].generalScore = 0.2*stu[i].dailyScore + 0.8*stu[i].finalScore;
		printf("* ???%s	??:%s		???:%4.2f?\n", (stu[i].number), (stu[i].name), stu[i].generalScore);

	}

	getchar();
}


//3.???è??????
int cmpBigtoSmall(const void *a, const void *b)
{

	SS *aa = (SS *)(a);
	SS *bb = (SS *)(b);



	if ((*aa).generalScore < (*bb).generalScore)  return 1;

	else if ((*aa).generalScore > (*bb).generalScore)  return -1;

	else
		return 0;

}

void sortScore(SS stu[], int N)
{

	qsort(&(stu[0]), N, sizeof(stu[0]), cmpBigtoSmall);

}

//4.??ä??????è???Nä?????ä???
void printOut(SS stu[], int N)
{

	printf("\n------?ä???: ?????è???????ä???!------\n\n");

	for (int i = 0; i < N; i++)
	{

		printf("?%d?ä??? ???%s	??:%s		???:%4.2f?\n", i + 1, &(stu[i].number[0]), &(stu[i].name[0]), stu[i].generalScore);
	}
	//5.è???????
	void averagenubmer(SS stu[], int N);
	{
		int all;
		double average;
		for (int i; i < N; i++) {
			all += stu[i].generalScore;
		}
		average = all / N;
	}
	//6.è??????
	void variance(SS stu[], int N) {
		int all;
		int fact;
		for(int i;int<N;i++){
			all += (stu[i] - averagenubmer(SS stu[], int N))*(stu[i] - averagenubmer(SS stu[], int N));
		}
		fact =int (all / N);
	}
	//?è?????
	void Sort(SS stu[], int N); {
		char* No;
		system("what you want ?");
		scanf(%s, &No);
		for (int i; i < N; i++) {
			if (stu[i].number == No) {
				printf("the NO is %s",stu[i].number);

			}
		}
	}


	getchar();

}
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include<stdlib.h>
#include<Windows.h>
#include "SCORE.h"
int main()
{
	int N = 0;
	SS *pstu = NULL;
	pstu = readDataFromFile(&N);

	calcuScore(pstu, N);

	sortScore(pstu, N);

	printOut(pstu, N);
	averagenubmer(pstu, N);
	variance(pstu, N);
	Sort(pstu, N);
	free(pstu);
	system("pause");
	return 0;

}
#pragma once
#ifndef __SCORE_H__
#define  __SCORE_H__


#include<stdio.h>
typedef struct sudent
{
	char number[10];
	char name[10];
	float dailyScore;
	float finalScore;
	float generalScore;
}SS;
void calcuSore(SS stu[], int N);
SS* readDataFromFile(int *N);

void calcuScore(SS stu[], int N);

void sortScore(SS stu[], int N);

void printOut(SS stu[], int N);
void averagenubmer(SS stu[], int N);
void variance(SS stu[], int N);
void Sort(SS stu[], int N);
#endif


